abstract class Shape {
    abstract double calculateArea();
}

class Rectangle extends Shape {
    private final double length;
    private final double breadth;

    public Rectangle(double length, double breadth) {
        this.length = length;
        this.breadth = breadth;
    }

    @Override
    double calculateArea() {
        return length * breadth;
    }
}

class Circle extends Shape {
    private final double radius;

    public Circle(double radius) {
        this.radius = radius;
    }

    @Override
    double calculateArea() {
        return Math.PI * radius * radius;
    }
}

class Triangle extends Shape {
    private final double base;
    private final double height;

    public Triangle(double base, double height) {
        this.base = base;
        this.height = height;
    }

    @Override
    double calculateArea() {
        return 0.5 * base * height;
    }
}

class ShapeCalculator {
    public void printArea(Shape shape) {
        System.out.println(shape.calculateArea());
    }
}

public class Test2 {
    public static void main(String[] args) {
        Shape rectangle = new Rectangle(10, 20);
        Shape circle = new Circle(3);
        Shape triangle = new Triangle(10, 20);

        ShapeCalculator shapeCalculator = new ShapeCalculator();
        shapeCalculator.printArea(rectangle);
        shapeCalculator.printArea(circle);
        shapeCalculator.printArea(triangle);
    }
}
